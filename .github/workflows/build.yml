name: Build

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE: dfedigital/teacher-training-api

    steps:
    - uses: actions/checkout@v2

    - name: Get values for current commit
      run: |
        GIT_SHA_SHORT=$(echo ${{github.sha}} | cut -c 1-7)
        GIT_REF=${{github.ref}}
        GIT_BRANCH=${GIT_REF##*/}

        echo "GIT_SHA_SHORT=$GIT_SHA_SHORT" >> $GITHUB_ENV
        echo "GIT_BRANCH=$GIT_BRANCH" >> $GITHUB_ENV
        echo "SHA_TAG=paas-$GIT_SHA_SHORT" >> $GITHUB_ENV
        echo "BRANCH_TAG=paas-$GIT_BRANCH" >> $GITHUB_ENV

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PERSONAL_ACCESS_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build Teacher-Training-Api-Middleman
      uses: docker/build-push-action@v2.1.0
      with:
        tags: ${{ env.DOCKER_IMAGE}}-middleman:${{ env.BRANCH_TAG }}
        pull: true
        push: true
        target: middleman
        cache-from: |
          ${{ env.DOCKER_IMAGE}}-middleman:master
          ${{ env.DOCKER_IMAGE}}-middleman:${{ env.BRANCH_TAG }}
        build-args: BUILDKIT_INLINE_CACHE=1

    - name: Build Teacher-Training-Api
      uses: docker/build-push-action@v2.1.0
      with:
        tags: |
          ${{ env.DOCKER_IMAGE}}:${{ env.BRANCH_TAG }}
          ${{ env.DOCKER_IMAGE}}:${{ env.SHA_TAG }}
        pull: true
        push: true
        cache-from: |
          ${{ env.DOCKER_IMAGE}}:${{ env.BRANCH_TAG }}
          ${{ env.DOCKER_IMAGE}}-middleman:master
          ${{ env.DOCKER_IMAGE}}-middleman:${{ env.BRANCH_TAG }}
        build-args: BUILDKIT_INLINE_CACHE=1

    - name: Setup tests
      run: |
        docker pull ${DOCKER_IMAGE}:${BRANCH_TAG}
        docker pull ${DOCKER_IMAGE}-middleman:${BRANCH_TAG}

        docker-compose up --no-build -d
        docker-compose exec -T web /bin/sh -c "./wait-for-command.sh -c 'nc -z db 5432' -s 0 -t 20"
        docker-compose exec -T web /bin/sh -c "bundle exec rails db:setup"
        docker-compose exec -T web /bin/sh -c "apk --no-cache add curl"
        docker-compose exec -T web /bin/sh -c "bundle exec rake cc:setup"
      env:
        GIT_BRANCH: ${{env.BRANCH_TAG}}

    - name: Run tests
      run: |
        docker-compose exec -T web /bin/sh -c 'bundle config --local disable_exec_load true'
        docker-compose exec -T web /bin/sh -c 'bundle exec rake parallel:setup'
        docker-compose exec -T web /bin/sh -c 'bundle exec rake "parallel:spec[,, -O .azure_parallel]"'
      env:
        GIT_BRANCH: ${{env.BRANCH_TAG}}
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}

    - name: Trigger QA Deployment
      if: ${{ success() }}
      uses: benc-uk/workflow-dispatch@v1.1
      with:
        workflow: Deploy
        token: ${{ secrets.ACTIONS_API_ACCESS_TOKEN  }}
        inputs: '{"environment": "qa", "sha": "${{ env.GIT_SHA_SHORT }}"}'
