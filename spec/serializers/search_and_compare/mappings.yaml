---
# Shared/Nested/Complex
Provider_default_value_Mapping: &Provider_default_value
  Id: 0
  Courses:
  AccreditedCourses:

Provider_direct_simple_Mapping: &Provider_direct_simple
  Name: provider_name
  _Name: mapped
  ProviderCode: provider_code
  _ProviderCode: mapped

Provider_Mapping: &Provider # Has a provider
  <<: *Provider_default_value
  <<: *Provider_direct_simple

IsSalaried_Mapping: &IsSalaried
  IsSalaried: '!course.is_fee_based?'
  _IsSalaried: mapped

Route_default_value_Mapping: &Route_default_value
  Id: 0
  Courses:

Route_Complex_value_Mapping: &Route_Complex_value
  <<: *IsSalaried
  Name: course.program_type
  _Name: mapped

Route_Mapping: &Route
  <<: *Route_default_value
  <<: *Route_Complex_value

DescriptionSection_Mapping: &DescriptionSection
  Id: 0
  _Id: default_value
  Ordinal: 0
  _Ordinal: default_value
  CourseId: 0
  _CourseId: default_value
  Course:
  _Course: default_value

Location_default_value_Mapping: &Location_default_value
  Id: 0
  _Id: default_value
  FormattedAddress:
  GeoAddress:
  Latitude:
  Longitude:
  LastGeocodedUtc: '0001-01-01T00:00:00'

Location_Mapping: &Location
  *Location_default_value
  Address:
  _Address: not_mapped

Campus_Mapping: &Campus
  Id: 0
  _Id: default_value
  Name:
  _Name: not_mapped
  CampusCode:
  _CampusCode: not_mapped
  LocationId:
  _LocationId: default_value
  VacStatus: F
  Course:
  _Course: default_value

Subject_default_value_Mapping: &Subject_default_value
  Id: 0
  SubjectArea:
  FundingId:
  Funding:
  IsSubjectKnowledgeEnhancementAvailable: false
  CourseSubjects:

Subject_direct_Mapping: &Subject_direct
  Name: 'subject_name'

Subject_Mapping: &Subject
  <<: &Subject_default_value
  <<: &Subject_direct

CourseSubject_default_value_Mapping: &CourseSubject_default_value
  CourseId: 0
  _CourseId: default_value
  Course:
  _Course: default_value
  SubjectId: 0
  _SubjectId: default_value

CourseSubject_complex_Mapping: &CourseSubject_complex
  Subject:
    <<: *Subject

CourseSubject_Mapping: &CourseSubject
  <<: &CourseSubject_default_value
  <<: &CourseSubject_complex

# based on <<: &IsSalaried_Mapping
Fees_Mapping: &Fees
  Uk: 0
  _Uk: not_mapped
  Eu: 0
  _Eu: not_mapped
  International: 0
  _International: not_mapped

Salary_Mapping: &Salary
  Minimum:
  _Minimum: not_mapped
  Maximum:
  _Maximum: not_mapped

ContactDetails_default_value_Mapping: &ContactDetails_default_value
  Id: 0
  Course:

ContactDetails_Mapping: &ContactDetails
  *ContactDetails_default_value
  Phone:
  _Phone: not_mapped
  Fax:
  _Fax: not_mapped
  Email:
  _Email: not_mapped
  Website:
  _Website: not_mapped
  Address:
  _Address: not_mapped


#Course mappings
Course_default_value_Mapping: &Course_default_value
  Id: 0
  ProviderCodeName:
  ProviderId: 0
  AccreditingProviderId:
  AgeRange: 0
  RouteId: 0
  ProviderLocationId:
  Distance:
  DistanceAddress:
  ContactDetailsId:

Course_nested_complex_DescriptionSections_Mapping: &Course_nested_complex_DescriptionSections
  DescriptionSections:
  - <<: *DescriptionSection
    Name: "about this training programme"
    Text: 'AboutCourse'
    __Name: 'snc field key'
    __Text: 'enrichment field key'
    __EnrichmentType: 'course_enrichment'
    __CourseDetailsSections: "AboutTheCourse" #snc ui section

  - <<: *DescriptionSection
    Name: "interview process"
    Text: 'InterviewProcess'
    __Name: "interview process"
    __Text: 'InterviewProcess'
    __EnrichmentType: 'course_enrichment'
    __CourseDetailsSections: "InterviewProcess" #snc ui section

  - <<: *DescriptionSection
    Name: "about fees"
    Text: 'FeeDetails'
    __Name: 'snc field key'
    __Text: 'enrichment field key'
    __EnrichmentType: 'course_enrichment'
    __CourseDetailsSections: "AboutFees" #snc ui section

  - <<: *DescriptionSection
    Name: "about salary"
    Text: 'SalaryDetails'
    __Name: 'snc field key'
    __Text: 'enrichment field key'
    __EnrichmentType: 'course_enrichment'
    __CourseDetailsSections: "AboutSalary" #snc ui section

  - <<: *DescriptionSection
    Name: "entry requirements"
    Text: 'Qualifications'
    __Name: 'snc field key'
    __Text: 'enrichment field key'
    __EnrichmentType: 'course_enrichment'
    __CourseDetailsSections: "EntryRequirementsQualifications" #snc ui section

  - <<: *DescriptionSection
    Name: "entry requirements personal qualities"
    Text: 'PersonalQualities'
    __Name: 'snc field key'
    __Text: 'enrichment field key'
    __EnrichmentType: 'course_enrichment'
    __CourseDetailsSections: "EntryRequirementsPersonalQualities" #snc ui section

  - <<: *DescriptionSection
    Name: "entry requirements other"
    Text: 'OtherRequirements'
    __Name: 'snc field key'
    __Text: 'enrichment field key'
    __EnrichmentType: 'course_enrichment'
    __CourseDetailsSections: "EntryRequirementsOther" #snc ui section

  - <<: *DescriptionSection
    Name: "financial support"
    Text: 'FinancialSupport'
    __Name: 'snc field key'
    __Text: 'enrichment field key'
    __EnrichmentType: 'course_enrichment'
    __CourseDetailsSections: "FinancialSupport" #snc ui section

  - <<: *DescriptionSection
    Name: "about school placements"
    Text: 'HowSchoolPlacementsWork'
    __Name: 'snc field key'
    __Text: 'enrichment field key'
    __EnrichmentType: 'course_enrichment'
    __CourseDetailsSections: "AboutSchools" #snc ui section

  - <<: *DescriptionSection
    Name: "about this training provider"
    Text: 'TrainWithUs'
    __Name: 'snc field key'
    __Text: 'enrichment field key'
    __EnrichmentType: 'provider_enrichment'
    __CourseDetailsSections: "AboutTheProvider" #snc ui section

  - <<: *DescriptionSection
    Name: "about this training provider accrediting"
    Text: GetAccreditingProviderEnrichment(ucasCourseData?.AccreditingProvider?.ProviderCode"
    __Name: 'snc field key'
    __Text: 'the accrediting provider code as identifier'
    EnrichmentType: 'accreditingProvider_provider_enrichment'
    #   var enrichment = enrichmentModel.AccreditingProviderEnrichments.FirstOrDefault(x => x.UcasProviderCode == accreditingProviderCode);

            # if (enrichment == null)
            # {
            #     return "";
            # }

            # return enrichment.Description;
  - <<: *DescriptionSection
    Name: "training with disabilities"
    Text: 'TrainWithDisability'
    __Name: 'snc field key'
    __Text: 'enrichment field key'
    __EnrichmentType: 'provider_enrichment'
    __CourseDetailsSections: "TrainWithDisabilities" #snc ui sectionmpuses:

Course_nested_complex_Campuses_Mapping: &Course_nested_complex_Campuses
  *Campus
  Location:
    <<: *Location
 #     Campuses = new Collection<SearchAndCompare.Domain.Models.Campus>(sites
    #         .Where(school => String.Equals(school.Status, "r", StringComparison.InvariantCultureIgnoreCase) && String.Equals(school.Publish, "y", StringComparison.InvariantCultureIgnoreCase))
    #         .Select(school =>
    #             new SearchAndCompare.Domain.Models.Campus
    #             {
    #                 Name = school.Site.LocationName,
    #                 CampusCode = school.Site.Code,
    #                 Location = new Location
    #                 {
    #                     Address = MapAddress(school.Site)
    #                 },
    #                 VacStatus = school.VacStatus
    #             }
    #         ).ToList()),

Course_nested_complex_Mapping: &Course_nested_complex
  <<: *Course_nested_complex_DescriptionSections
  Campuses:
  -  <<: *Course_nested_complex_Campuses
  CourseSubjects:
  - <<: *CourseSubject


Provider_serializer_Mapping: &Provider_serializer
  Provider: # Has a provider
    <<: *Provider
  AccreditingProvider: # Optional accrediting provider (provider type)
    <<: *Provider

Course_nested_object_Mapping: &Course_nested_object
  Route:
    <<: *Route
  Fees:
    <<: *Fees
  <<: *IsSalaried
  Salary:
    <<: *Salary
  ProviderLocation:
    <<: *Location
  ContactDetails:
    <<: *ContactDetails

Course_direct_simple_Mapping: &Course_direct_simple
  Name: name
  ProgrammeCode: course_code
  StartDate: start_date

Course_direct_complex_Mapping: &Course_direct_complex
  #  site related
  HasVacancies: has_vacancies?
  _HasVacancies: not_mapped_to_factory
  # subject related
  IsSen: is_send?
  _IsSen: not_mapped_to_factory
  #  site related
  ApplicationsAcceptedFrom: applications_open_from
  _ApplicationsAcceptedFrom: not_mapped_to_factory
  #     ApplicationsAcceptedFrom = sites.Select(x => x.ApplicationsAcceptedFrom).Where(x => x.HasValue)
  #         .OrderBy(x => x.Value)
  #         .FirstOrDefault(),
  Mod: program_type_description
  _Mod: mapped_no_idea
  IncludesPgce: 1 #MapQualification(ucasCourseData.Qualification) (enum)
  _IncludesPgce: not_mapped
#  private static IDictionary<CourseQualification, IncludesPgce> qualificationMap = new Dictionary<CourseQualification, IncludesPgce>
#         {
#             {CourseQualification.Qts, IncludesPgce.No},
#             {CourseQualification.QtsWithPgce, IncludesPgce.Yes},
#             {CourseQualification.QtsWithPgde, IncludesPgce.QtsWithPgde},
#             {CourseQualification.QtlsWithPgce, IncludesPgce.QtlsWithPgce},
#             {CourseQualification.QtlsWithPgde, IncludesPgce.QtlsWithPgde}
#         };
#         private IncludesPgce MapQualification(CourseQualification qualification)
#         {
#             if (qualificationMap.TryGetValue(qualification, out IncludesPgce result))
#             {
#                 return result;
#             }
#             throw new ArgumentOutOfRangeException(nameof(qualification), qualification, "Could not map qualifications");
#         }
  FullTime:
  _FullTime: not_mapped
      #     FullTime = ucasCourseData.StudyMode == "P" ? VacancyStatus.NA : VacancyStatus.Vacancies,
  PartTime:
  _PartTime: not_mapped
      #     PartTime = ucasCourseData.StudyMode == "F" ? VacancyStatus.NA : VacancyStatus.Vacancies,
  # public enum VacancyStatus
  #   {
  #       NoVacancies = 0,

  #       Vacancies = 1,

  #       WaitingList = 2,

  #       NA = 3
  #   }

Course_direct_enrichment_Mapping: &Course_direct_enrichment
  Duration: enrichement.course_length
  _Duration: not_mapped

  # Actual course
Course_Full_Mapping:
  <<: *Provider_serializer      # mapped
  <<: *Course_default_value     # mapped
  <<: *Course_direct_simple     # mapped
  <<: *Course_direct_complex    # half
  <<: *Course_direct_enrichment
  <<: *Course_nested_object
  <<: *Course_nested_complex
